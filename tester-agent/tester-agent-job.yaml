apiVersion: batch/v1
kind: Job
metadata:
  # name: ping-patrol-tester-job-{{JOB_ID}} # Name will be dynamically generated by the backend
  name: ping-patrol-tester-job # Placeholder, can be customized by backend
  namespace: application      # Added namespace
  labels:
    app: ping-patrol-tester-agent
    # job-id: {{JOB_ID}} # To uniquely identify job instances
spec:
  template:
    metadata:
      labels:
        app: ping-patrol-tester-agent
        # job-id: {{JOB_ID}}
    spec:
      containers:
      - name: tester-agent-container
        image: YOUR_DOCKER_IMAGE_HERE # Placeholder: e.g., your-repo/ping-patrol-tester-agent:latest
        # imagePullPolicy: Always # Or IfNotPresent, depending on your image update strategy
        args:
        - "--destinations"
        # - "{{DESTINATIONS_STRING}}" # Placeholder: e.g., "google.com:443,http://example.com"
                                    # This will be a single string, comma-separated.
                                    # The backend will replace this line or inject the argument.
                                    # Example of how it might look after backend processing:
        - "example.com:80,http://google.com" # Actual value provided by backend
        resources:
          limits:
            cpu: "100m"
            memory: "64Mi"
          requests:
            cpu: "50m"
            memory: "32Mi"
      restartPolicy: Never # Or OnFailure, suitable for batch jobs
  backoffLimit: 2 # Number of retries before considering a Job as failed
  # activeDeadlineSeconds: 300 # Optional: Time limit for the job to complete
  # ttlSecondsAfterFinished: 3600 # Optional: Clean up finished jobs automatically
